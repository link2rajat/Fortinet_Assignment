Directions:
•	You can answer a question entirely or answer parts- it is up to you
•	You have 1 week. 
•	Answer must be in Java code
•	Format the code and submit the answer to Github, and share that link in the response email. Do not attach anything in email. By the way, https://www.compilejava.net/ can help you post your answer anonymously
1.	Reverses a single list. The Node of this single list as the following:

class Node{
 Node next;
 int value;
}
// Your resolution 
// Time complexity:  
// Space complexity:  
public Node reverse(Node head){
}
// JUnit test cases 
2.	Sum of multidimensional Array. require no extra space, no recursion. 

class MultiDimensionArray {
    // This is a provided function, Assume it works
    public static Long getValue(int... indexOfDimension) {
        //... 
        return value;
    }
    // lengthOfDeminsion: each dimension's length, assume it is valid: lengthOfDeminsion[i]>0.
    public static Long sum(MultiDimensionArray mArray, int[] lengthOfDeminsion) { 
   // Your resolution 
   // Time complexity:  
   // Space complexity: 
    return sum;
    }
 
3.	Given a list of numbers, see if you can separate them in to k groups such that each group has the same sum. 

public boolean separate(List<Integer> list, int k){
   // Your resolution 
   // Time complexity:  
   // Space complexity: 
}
  // JUnit test cases 
4.	Implements of Singleton or Dynamic ProxyAssume you are using Java 7+
5.	When the project is using Spring 4.3 and Hibernate 5.2, how to write the JUnit test without bounded with concrete DB closely. In other words, How to mock DB in JUnit test for service method. If not possible give the reason else list cases for the different scenario. 

